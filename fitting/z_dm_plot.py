import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
import numpy as np

'''
__target__ = 分布型拟合
'''
x = [
2.4	    ,
11.9808	,
1.5	,
2.3	,
59.8	,
20.12	,
27.98	,
38.7	,
28	,
63	,
1.7	,
1.848	,
0.9	,
44.8	,
1.4	,
1.76	,
2.016	,
1.316	,
2.7492	,
3.4342	,
1.2224	,
1.4652	,
0.508	,
2.3392	,
0.7502	,
1.755	,
0.8883	,
1.038	,
7.28	,
2.1888	,
31.4	,
4.24	,
5.724	,

]
# x = [5.724,4.24,31.4,2.1888,7.28,1.038,0.8883,1.755,0.7502,2.3392,0.508,1.4652,1.2224,3.4342,2.7492,1.316,2.016,1.76,1.4,44.8,0.9,1.848,1.7,63,28,38.7,57.98,20.12,59.8,2.3,1.5,6.2208,2.4]
# x.reverse()
x= [1575.6, 263.47, 520.0, 1458.0, 1111.0, 176.4, 609.5, 682.0, 278.0, 1165.0, 2596.1, 960.4, 1909.8, 266.5, 1593.9, 776.2, 1105.6, 562.7, 779.0, 861.0, 469.88, 952.4, 557.0, 1629.18, 553.3, 1103.6, 723.0, 623.3, 944.38, 899.55, 375.0, 745.0, 790.0]
y1= [2.164, 0.327, 0.373, 1.709, 1.511, 0.21, 0.817, 0.521, 0.31, 1.08, 3.609, 1.294, 2.452, 0.338, 2.062, 0.632, 1.135, 0.755, 0.783, 1.172, 0.593, 1.244, 0.378, 2.199, 0.747, 1.515, 0.967, 0.828, 1.29, 1.226, 0.394, 0.594, 1.001]
y2= [2.094, 0.257, 0.303, 1.639, 1.441, 0.14, 0.747, 0.451, 0.24, 1.01, 3.539, 1.223, 2.382, 0.268, 1.992, 0.562, 1.065, 0.685, 0.713, 1.101, 0.523, 1.174, 0.308, 2.129, 0.677, 1.445, 0.897, 0.758, 1.22, 1.155, 0.324, 0.524, 0.931]
y3= [2.024, 0.187, 0.233, 1.569, 1.371, 0.07, 0.677, 0.381, 0.17, 0.94, 3.469, 1.153, 2.311, 0.198, 1.922, 0.492, 0.994, 0.615, 0.643, 1.031, 0.453, 1.104, 0.238, 2.059, 0.607, 1.375, 0.826, 0.687, 1.15, 1.085, 0.254, 0.454, 0.861]
print('x=',x)
print(y1)
print(y2)
print(y3)
x = np.array(x)
y1 = np.array(y1)
y2 = np.array(y2)
y3 = np.array(y3)

for i in y3:
    print(i,end='\t')
print()

# 指定函数型
def func(x,a,b):

    return a*x + b
# 获取拟合结果
x = np.array([1,2,3,4])
y2 = np.array([20,9,3,1])

popt, pcov = curve_fit(func, x, y2)

# 打印拟合 参数
print(popt)

a=popt[0]#popt里面是拟合系数，读者可以自己help其用法
b=popt[1]
print('result:',a,b)

yvals=func(x,a,b)
# plot1=plt.plot(x, y1, '*',label='original values1')
plot1=plt.plot(x, y2, '.',label='original values2')
# plot1=plt.plot(x, y3, '*',label='original values3')
# plot2=plt.plot(x, yvals, 'r',label='curve_fit values')

for i in range(len(x)):
    xx = x[i]
    yy1,yy2,yy3 = y1[i],y2[i],y3[i]
    plt.plot([xx,xx], [yy1,yy3], '-',linewidth=1)
plt.xlabel('Fobs')
plt.ylabel('Z')

plt.legend(loc=1)# 图例 指定legend的位置,读者可以自己help它的用法
plt.title('')

plt.show()
plt.savefig('p2.png')


